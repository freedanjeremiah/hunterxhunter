[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "walrus-git-cli"
version = "1.0.0"
description = "Git-like CLI for Walrus decentralized storage with push/pull functionality"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Walrus Developer", email = "developer@walrus.storage"}
]
maintainers = [
    {name = "Walrus Developer", email = "developer@walrus.storage"}
]
keywords = ["walrus", "storage", "git", "cli", "decentralized", "blockchain"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: System :: Archiving",
    "Topic :: Software Development :: Version Control",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Environment :: Console",
]
requires-python = ">=3.8"
dependencies = [
    "PyYAML>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.900",
]
publisher = [
    "PyYAML>=6.0",
]

[project.urls]
Homepage = "https://github.com/walrus-storage/walrus-git-cli"
Documentation = "https://docs.walrus.storage/"
Repository = "https://github.com/walrus-storage/walrus-git-cli.git"
"Bug Tracker" = "https://github.com/walrus-storage/walrus-git-cli/issues"
Changelog = "https://github.com/walrus-storage/walrus-git-cli/blob/main/CHANGELOG.md"

[project.scripts]
walrus = "walrus_cli:main"
walrus-push = "walrus_cli:main_push"
walrus-pull = "walrus_cli:main_pull"
walrus-list = "walrus_cli:main_list"

[tool.setuptools]
py-modules = ["walrus_cli"]
include-package-data = true

[tool.setuptools.packages.find]
exclude = ["tests*", "publisher*"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true